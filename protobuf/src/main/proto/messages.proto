syntax = "proto3";
// Обязательная строчка. Либо указывается edition, либо syntax: proto2 или proto3

//Сгенерированные классы будут уложены в этот пакет
package formats.protobuf;

/* Длинный комментарий, который превратится в javadoc на класс.
 * Все начинается с ключевого слова `message` */
message SimpleMessage {
  string name = 1; //Комментарий превратится в javadoc к полю
  int32 version = 2;
}

message DataTypesMessage {
  int32 integer32 = 1; // Для отрицательных значений лучше использовать sint
  uint32 unsignedInt32 = 2; // беззнаковое
  sint32 signedInt32 = 3; // со знаком. Лучше энкодит отрицательные числа, чем int32
  fixed32 fixedInt32 = 4; // Всегда занимает 4 байта. Эффективнее, чем int32 хранит огромные значения (> 2^28)
  sfixed32 sfixedInt32 = 5; // Всегда занимает 4 байта

  int64 integer64 = 6;
  uint64 unsignedInt64 = 7;
  sint64 signedInt64 = 8;
  fixed64 fixedInt64 = 9;
  sfixed64 sfixedInt64 = 10;

  float floatField = 11;
  double doubleField = 12;

  bool flag = 13;
  bytes rawBytesField = 14;
  string strField = 15;

  Status enumField = 16;
  NestedMessage nested = 17;

  repeated int32 intCollection = 18; // Повторяющееся значение. Аналог списка
  repeated string strCollection = 19;

  oneof variants {
    string stringVariant = 20;
    int32 integerVariant = 21;
    bool boolVariant = 22;
    NestedMessage nestedVariant = 23;
  }

  map<string, string> mapField = 24;
}

message NestedMessage {
  string name = 1;
}

// Перечисление
enum Status {
  UNKNOWN = 0;
  SUCCESS = 1;
  FAIL = 2;
  SO_BIG = 128; // Номер точно не влезет в 7 бит
}

/*
 * Ключевое слово optional было в proto2, но его убрали в proto3.
 * Спустя время поняли, что сделали это зря и вернули в v3.15.
 * https://github.com/protocolbuffers/protobuf/blob/main/docs/field_presence.md
 */
message OptionalFieldsMessage {
  optional int32 intField = 1;
  optional string strField = 2;
}

message NotOptionalFieldsMessage {
  int32 intField = 1;
  string strField = 2;
}